package com.bmzx.platform.core.de;

import lombok.Data;

/**
 * 数据元bean
 * 以分类模式、关键字作为业务主键
 *
 * @Description 数据元bean
 * @Author liu418749406@163.com
 * @Date 2023/10/21 22:46
 */
@Data
public class DEBean extends BaseData {

    /**
     * 名称
     * 6.1.1 名称： 名称
     *       定义：赋予数据元的单个或多个字词的指称
     *       约束： 必选
     *       数据类型：字符串
     *       备注：1.关于命名原则见GB/T 18391.5和GB/T 18391.6
     *            2.如果在一定的应用范围内有命名约束约定，则本属性必须根据这些约束来构成
     *            3.控制数据源的华景可要求本属性在一个数据元字典内部是唯一的
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:04
     */
    private String name;
    /**
     * 标识符
     * 6.1.2 名称：标识符
     *       定义：在一个注册机构内与语言谷关的一个数据元的唯一标识符
     *       约束：条件选
     *       条件：如果属性 6.1.1 在一个注册机构内部不是唯一的那么本属性是必选的
     *            唯一标识符的分配可作为任何注册机构的注册程序的必选部分
     *        数据类型：字符
     *       备注:  1.为了在不同注册机构控制的数据元之间进行引用,本属性可以由注册机构和属性“版本”(见6.1.3)的标识来限定，以保证唯一性。
     *             建立和控制数据元标识符的有关约定和建议见GB/T 18391.5和2.GB/T 18391.6。
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:37
     */
    private String uuId;
    /**
     * 版本
     * 6.1.3 名称: 版本
     *        定义：在一个注册机构内的一系列逐渐完善的数据元规范中，某个数据元规范发布的标识
     *        约束：条件选
     *        条件：当对属性进行更新，并且这种更新满足注册机构指定的新版本的维护规则是，则本属性就是必选的
     *        数据类型：字符
     *        备注：1.有关版本使用的规则和建议见GB/T 18391.5
     *             2.由于数据元控制和数据元引用方面的原因，属性版本可以作为数据标识符的一个限定符来使用
     *
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:41
     */
    private String version;

    /**
     * 注册机构
     * 6.1.4 名称：注册机构
     *        定义：经授权可对数据元注册的组织
     *        约束：条件选
     *        条件： 每一个出现的标识符都应指明一个注册机构
     *        数据类型：字符串
     *        备注：组合属性 注册机构。标识符 和版本 可用来唯一确定一个数据元。 一个数据元可以有多个注册机构来注册
     *        GB/T 18391.6 给出了关于注册机构的更多详细资料
     *
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:43
     */
    private String regOrg;

    /**
     * 同义名称
     * 6.1.5 名称：同义名称
     *       定义：与给定名称有却别但是表示相同的数据元概念的单词或多字的指称。
     *       约束：可选
     *       数据类型：字符串
     *       备注：在确定的应用环境中，同义名称常常是熟悉的名称，如果是这种情况的话，要使用属性相关环境来指明这个环境
     *
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:44
     */
    private String subName;

    /**
     * 相关环境
     * 6.1.6 名称：相关环境
     *       定义：对使用或产生名称（或定义名称）的应用环境或应用规程的指明或描述
     *       约束：条件选
     *       数据类型：字符串
     *       条件：对于属性“统一名称”(6.1.5)的每一次出现来说，本属性都是必选的 当属性“名称（6.1.1）”存在于一个信息交换过程中是，本属性是必选的
     *       备注：为属性“名称”（6.1.1）指定属性相关环境对于注射机构的注册陈旭来说是必选的
     *
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:46
     */
    private String environment;

    /**
     * 定义
     * 6.2.1 名称：定义
     *       定义：表达一个数据元的本质特性并使其区别于所有其他数据元的陈述
     *       约束：必选
     *       数据类型：字符串
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/10/21 23:14
     */
    private String define;


    /**
     * 分类模式
     * 6.3.1 名称：分类模式
     *       定义：根据对象的来源、组成、结构、应用、功能等共同特性，将对象排列或划分成组的模式的分类参照
     *       约束：可选
     *       数据类型：字符串
     *       备注：分类模式可以用于使数据元与功能上的和（或）组织上的和（或）技术上的分类模式和（或）改建模型相关联
     *           示例： 对于名为：电阻器实体的重量
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:53
     */
    private String classify;
    /**
     * 关键字
     * 6.3.2 名称：关键字
     *       定义：用于数据元检索的一个或多个有意义的字词
     *       约束：可选
     *       数据类型：字符串
     *       备注：本属性可作为记录的关键字与所研究的数据元相关联
     * @Description
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:16
     */
    private String keyWords;

    /**
     * 相关数据参照
     * 6.3.3 名称：相关数据参照
     *       定义：数据元与相关数据之间的参照
     *            参照的数据可以注册在同一数据元字典中，或者注册在其他的字典、字库中
     *       约束：可选
     *       数据类型：字符串
     *       备注：1.当相关数据被其他注册机构锁控制时，本属性应当具有唯一的标识符，举例来说：注册机构加上其所分配的有关数据的标识符及构成唯一标识符
     *            2.参见GB/T 18391.5 数据元的命名和标识原则
     *            3.一个数据管理环境应当为应用本属性设置一些规则和约束
     *            4.如果本属性存在，则他应当与属性（关系类型）作为一对属性来规定
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:54
     */
    private String refData;

    /**
     * 关系类型
     * 6.3.4 名称：关系类型
     *       定义：数据元与相关数据之间关系特性一种表达
     *       约束：条件选
     *       条件：若属性“相关数据参照”存在，则本属性就是必选
     *       数据类型：字符串
     *       备注： 1、本属性应当与属性相关数据参照，作为一对属性来规定
     *             2.关系类型的示例有：......的限定符  有......限定
     *             3.一个数据管理环境应当为应用本属性设置一些规则和约束
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 21:57
     */
    private String refType;

    /**
     * 表示类型
     *  6.4.1 名称：表示类别
     *        定义：用于表示数据元的符号，字符串或其他表示的类型
     *        约束：必选
     *        数据类型：字符串
     *        备注：1.表示类型应当有相关的标准规定，可以用坐标是类别的示例有：
     *           字符表示法（ISO/IEC 646)
     *           字符、符号表示法（ISo第143号注册出版物）
     *           条码表示法
     *           图形表示法
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 22:00
     */

    private String showType;
    /**
     * 表示形式 描述
     *  6.4.2 名称：表示形式
     *        定义：数据元表示形式的名称或描述，例如：数值、代码、文本、图标
     *        约束：必选
     *        数据类型：字符串
     *        备注：1.参见GB/T 18391.2的有关适用术语
     *             2.示例1：对于名为“出生地代码”的数据元来说，本地属性相当于“代码”
     *             3.示例2：对于数据元"产品描述"来说，本属性相当于“文本”
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 22:00
     */
    private String showDec;
    /**
     * 数据元值的数据类型
     * 6.4.3 名称：数据元值的数据类型
     *       定义：表示数据元值的不同值的集合
     *       约束：必选
     *       数据类型:字符串
     *       备注：示例：字符、序数、整数、实数、比例数、二进制数、有理数
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 22:04
     */
    private String dataType;

    /**
     * 数据元值的最大长度
     * 6.4.4 名称：数据元值的最大长度
     *       定义：表示数据元值的存储单元的最大数目
     *       约束：必选
     *       数据类型：整数
     *       备注：1、示例，对于数据元“发票号码”来说，属性数据类型的实例为“字符”，
     *       并且属性“数据元值的最大长度”的实例值为10
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 22:05
     */
    private String dataMaxLength;
    /**
     * 数据元值最小长度
     * 6.4.5 名称：数据元值的最小长度
     *       定义：表示数据元值的（与数据类型相对应的）存储单元的最小数目
     *       约束：必须
     *       数据类型：整数
     *       备注：1、示例 对于数据元“产品描述”来说，属性数据类型的实例为“字符”，并且属性“数据元值的最小长度”的实例值为10
     *
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 22:04
     */
    private String dataMinLength;
    /**
     * 表示格式
     * 6.4.6 名称：表示格式
     *       定义：用字符串表示数据元值的格式
     *       约束：条件选
     *       条件：如果数据元属于“定量数据”类，那么本属性就是必选，如果属性表示形式
     *       数据类型：字符串
     *       备注：1、对于定量数据来说，区别整数，十进制标记和浮点计数法是必须的
     *
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 22:06
     */
    private String showFormat;
    /**
     * 数据元允许值
     * 6.4.7 名称：数据元允许值
     *        定义：根据相应属性中所规定的标识形式，格式。数据类型和最大和最小长度而决定的数据元的允许示例表示的集合，该集合可以根据名称，应用来源，示例表达的美剧
     *        或者根据实力生产规则来规定
     *        约束：必选
     *       数据类型：字符串
     *       备注：当数据元允许值就是编码表示的枚举形式时，每一个数据元值及其示例都应当成对表示
     *
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/20 22:49
     */
    private String acceptedValue;

    /**
     * 主管机构
     * 6.5.1 名称：主管机构
     *        定义：对必选属性内容负责的就跟或机构内部的部门，数据元就是有这些必选属性来规定的
     *        约束：可选
     *        数据类型：字符串
     *        备注：该组织应当被视为数据元的拥有者
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/24 23:16
     */
    private String authOrg;

    /**
     * 注册状态
     *  6.5.2 名称：注册状态
     *        定义：数据元在其注册的生存期内状态的表示
     *        约束：条件选
     *        条件：在注册机构所规定的数据元生存期内，本属性是必选
     *        数据类型：字符
     *        备注：判别注册状态的类型和注册状态的确定应当遵循在数据元注册规程中所阐述的规则
     *        （见GB/T 18391.6）
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/24 23:18
     */
    private String regStatus;

    /**
     * 提交机构
     *  6.5.3 名称：提交机构
     *        定义：维数据源字典的增补、变更或注销、撤销而提交的数据元的组织或组织内的部门
     *        约束：可选
     *        数据类型：字符串
     * @Description 
     * @Autothor liu418749406@163.com
     * @Date 2023/11/24 23:22
     */
    private String submitOrg;
    /**
     * 备注
     *  6.5.4 名称：备注
     *        定义：数据元的注释
     *        约束：可选
     *        数据类型：字符串
     * @Description TODO
     * @Autothor liu418749406@163.com
     * @Date 2023/11/24 23:23
     */
    private String mark;
}
